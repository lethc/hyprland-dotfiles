#!/bin/sh

ConfigFolder=${XDG_CONFIG_HOME:-"$HOME/.config"}/bookmenu

VerticalLines=
Monitor=
Font="Mono-12"
BackgroundColor="#1d1f21"
SelectedBackgroundColor="#444"
ForegroundColor="#d8dee9"
SelectedForegroundColor="#268bd2"
Separator="::"
BookmarksFile=${XDG_CONFIG_HOME:-"$HOME/.config"}/bookmenu/bookmarks
ConfigFile=${XDG_CONFIG_HOME:-"$HOME/.config"}/bookmenu/config
Command="xdg-open"
Prompt="Select a Bookmark"
FuzzyFinder="rofi"

Err() {
  echo "$2" 1>&2
  exit "$1"
}

HelpPage() {
  echo "Future Help Page"
}

GenerateConfig() {
  if [ "$1" = "-g" ]; then
    mkdir -p "$ConfigFolder"
    sudo cp /usr/share/bookmenu/config "$ConfigFolder/config"
    sudo cp /usr/share/bookmenu/bookmarks "$ConfigFolder/bookmarks"
  elif [ "$1" = "-gc" ]; then
    mkdir -p "$ConfigFolder"
    sudo cp /usr/share/bookmenu/config "$ConfigFolder/config"
  else
    mkdir -p "$ConfigFolder"
    sudo cp /usr/share/bookmenu/bookmarks "$ConfigFolder/bookmarks"
  fi
}

for Value in "$@"
do
  case "$Value" in
    -m|-l|-p|-fn|-nb|-sb|-sf|-co|-c|-b|-sp|-f|-a|-r) OptionSet=$Value ;;
    -h|--help) HelpPage; exit 0 ;;
    -o) EchoPath=true; OptionSet= ;;
    -g|-gc|-gb) GenerateConfig "$Value"; OptionSet= ;;
  esac

  if [ -n "$OptionSet" ]; then
    case "$OptionSet" in
      -l) VerticalLines=$Value ;;
      -m) Monitor=$Value ;;
      -p) Prompt=$Value ;;
      -fn) Font=$Value ;;
      -nb) BackgroundColor=$Value ;;
      -nf) ForegroundColor=$Value ;;
      -sb) SelectedBackgroundColor=$Value ;;
      -sf) SelectedForegroundColor=$Value ;;
      -b) BookmarksFile=$Value ;;
      -c) ConfigFile=$Value ;;
      -co) Command=$Value ;;
      -sp) Separator=$Value ;;
      -f) FuzzyFinder=$Value ;;
      -a) Add=$Value ;;
      -r) Remove=$Value ;;
      *) Err 1 "Invalid option set" ;;
    esac
  fi
done

if [ ! -e "$BookmarksFile" ]; then
  Err 1 "Selected bookmarks file does not exist"
fi

if [ -e "$ConfigFile" ]; then
  while read -r Line; do
    Key=${Line%%=*}
    Value=${Line##*=}
    case $Key in
      VerticalLines) [ -n "$Value" ] && VerticalLines=$Value ;;
      Monitor) [ -n "$Value" ] && Monitor=$Value ;;
      Font) [ -n "$Value" ] && Font="$Value" ;;
      BackgroundColor) [ -n "$Value" ] && BackgroundColor=$Value ;;
      SelectedBackgroundColor) [ -n "$Value" ] && SelectedBackgroundColor=$Value ;;
      ForegroundColor) [ -n "$Value" ] && ForegroundColor=$Value ;;
      SelectedForegroundColor) [ -n "$Value" ] && SelectedForegroundColor=$Value ;;
      Separator) [ -n "$Value" ] && Separator=$Value ;;
      BookmarksFile) [ -n "$Value" ] && BookmarksFile=$Value ;;
      Command) [ -n "$Value" ] && Command=$Value ;;
      PromptText) [ -n "$Value" ] && Prompt=$Value ;;
      FuzzyFinder) [ -n "$Value" ] && FuzzyFinder=$Value ;;
    esac
  done < "$ConfigFile"
fi

SelectFinder() {
  case "$FuzzyFinder" in
    rofi)
      rofi -dmenu -i -p "$Prompt" -theme spotlight -theme-str "window { width: 40%; }" \
        -theme-str "entry { font: '$Font'; }" ;;
    fzf)
      fzf ;;
    *) Err 1 "$FuzzyFinder is not a supported fuzzy finder" ;;
  esac
}

SelectPath() {
  xargs -I % grep "%$Separator" "$BookmarksFile" | sed "s/.*$Separator//;"
}

FileSystem() {
  FullPath=$(echo "$Bookmark" | sed "s|~/|$HOME/|")
  $Command "$FullPath" &
}

Website() {
  $Command "$Bookmark" &
}

SelectBookmark() {
  Bookmark=$(sort "$BookmarksFile" | sed "s/$Separator.*//" | SelectFinder | SelectPath)
  if [ -z "$Bookmark" ]; then
    Err 1 "No bookmark selected"
  fi
}

if [ -n "$Add" ]; then
  echo "$Add" >> "$BookmarksFile"
elif [ -n "$Remove" ]; then
  sed -i "/$Remove:/d" "$BookmarksFile"
elif [ -n "$EchoPath" ]; then
  SelectBookmark
  echo "$Bookmark" | sed "s|~|$HOME|"
else
  SelectBookmark
  case "$Bookmark" in
    ~\/*|$HOME*) FileSystem ;;
    *) 
      if [ -n "$Command" ]; then
        eval $Command "$Bookmark"
      else
        Website
      fi
      ;;
  esac
fi
