#!/bin/bash

# Space to reserve for the bar (at the bottom)
bar_height=40

# Get active window info
win_info=$(hyprctl -j activewindow)
monitor_id=$(echo "$win_info" | jq '.monitor')

# Get monitor info for the monitor where active window is
monitor_info=$(hyprctl -j monitors | jq ".[] | select(.id == $monitor_id)")

monitor_x=$(echo "$monitor_info" | jq '.x')
monitor_y=$(echo "$monitor_info" | jq '.y')
monitor_width=$(echo "$monitor_info" | jq '.width')
monitor_height=$(echo "$monitor_info" | jq '.height')

# Calculate usable height (leaving space for the bar)
usable_height=$((monitor_height - bar_height))

snap_left() {
    target_x=$monitor_x
    target_y=$monitor_y
    new_width=$((monitor_width / 2))
    new_height=$usable_height

    hyprctl dispatch moveactive exact "$target_x" "$target_y"
    hyprctl dispatch resizeactive exact "$new_width" "$new_height"
}

snap_right() {
    target_x=$((monitor_x + monitor_width / 2))
    target_y=$monitor_y
    new_width=$((monitor_width / 2))
    new_height=$usable_height

    hyprctl dispatch moveactive exact "$target_x" "$target_y"
    hyprctl dispatch resizeactive exact "$new_width" "$new_height"
}

snap_top() {
    target_x=$monitor_x
    target_y=$monitor_y
    new_width=$monitor_width
    new_height=$((usable_height / 2))

    hyprctl dispatch moveactive exact "$target_x" "$target_y"
    hyprctl dispatch resizeactive exact "$new_width" "$new_height"
}

snap_bottom() {
    target_x=$monitor_x
    target_y=$((monitor_y + usable_height / 2))
    new_width=$monitor_width
    new_height=$((usable_height / 2))

    hyprctl dispatch moveactive exact "$target_x" "$target_y"
    hyprctl dispatch resizeactive exact "$new_width" "$new_height"
}

case "$1" in
left)
    snap_left
    ;;
right)
    snap_right
    ;;
up)
    snap_top
    ;;
down)
    snap_bottom
    ;;
*)
    echo "Usage: $0 {left|right|top|bottom}"
    exit 1
    ;;
esac
